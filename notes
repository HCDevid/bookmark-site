
questions for jesse:
	should i disable all my AJAXy things on 'ajax:beforeSend' and re-enable them on 'ajax:success'
	is it possible to crash/burn things byallowing them to do stuff on multiple tabs?
	question for jesse: does my default-playlist scheme have implications for the has_many through for bookmark_urls?
	motivation: i want to finish this right and not let it go too long bc of the competition
------------------------------------------------------------------
features:
	users trying it out
		null password
		-and/or-
		shopping cart type
			prove you're human to save
	save where people are in videos
	playlist
		-default and regular playlist
		-send bookmarks to other playlists
------------------------------------------------------------------
fixes:
	playlist:
		controller:
			[ ]create/update: mass assign problem
			(FIX? Don't try and create bookmark_urls through the user_bookmarks)
		view:
			edit:
				[x]change edit link to have link to 'edit' in user_bookmarks
	user:
		model/controller
			[ ]user has two kinds of playlists, a default playlist and regular actual playlists
	user_bookmark:
		[ ]local variables?
		[x]controller:
			[x]make a 'destroy' method
			[x]make an 'edit/update' method
		view:
			[x]make an 'edit' view
------------------------------------------------------------------
Do now:
	[x]update user_bookmarks 
		[x]change controller
		[x]edit button: prevent default, send to html
		[ ]discard changes button
			[x]render bookmark
			[x]submit button
		[x]return js reply
			[x]hidden_id's and where the divs go
			[x]replace node
			[x]set event listeners
		[x]remote submit
		[x]delete 
			[x]controller
			[x]partial
		---------	
	[x]default playlist
		[x]model
		[x]controller
		[x]view
	[x]user bookmarks
		[x]change new/edit to show which playlist
	[x]moving items between playlists
		[x]controller (in playlists controller? shouldn't be that hard)
		[x]routing
		[x]ajax method to playlist controller
	[ ]handle bookmarklets
		[x]submit
		[ ]jquery check bookmarklet link, change second clause
		[x]prevent redirect
		[ ]notification
		[ ]cross site xhr
	[ ]drag and drop
	[ ]thumbnails
	
	[ ]get rid of ajax playlist deletion
	[x]redirect create bookmark to user when it's for default playlist
	[ ]dirty, require refresh
	[ ]ttps
	[ ]better edit-view mode switch and better delete link placement
	[ ]back-and-authenticate
	[ ]disable multiple ajax submits
	[ ]notification about blank bookmark_url
	[ ]notification about blank bookmark_name
	[ ]handling errors
------------------------------------------------------------------
potential changes:
	bookmark urls model
		indexing
		adding a counter
		storing when different URLs go to the same page
------------------------------------------------------------------
I don't know what this means for it:
	user_bookmarks are not destroyed when they're removed from bookmark_urls

------------------------------------------------------------------

change bookmark connections, not it's 
add separate methods for all the stuff


---open as possible w/o compromising---


users following users:
	"self join has many thing"
	has_many :followers, :class_name => "Employee",
    :foreign_key => "follower_id"
  has_many :manager, :class_name => "Employee"

users following playlists

bookmarks having playlists and users