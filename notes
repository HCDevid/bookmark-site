
questions for jesse:
	should i disable all my AJAXy things on 'ajax:beforeSend' and re-enable them on 'ajax:success'
	is it possible to crash/burn things byallowing them to do stuff on multiple tabs?
	question for jesse: does my default-playlist scheme have implications for the has_many through for bookmark_urls?
	motivation: i want to finish this right and not let it go too long bc of the competition
------------------------------------------------------------------
features:
	users trying it out
		null password
		-and/or-
		shopping cart type
			prove you're human to save
	save where people are in videos
	playlist
		-default and regular playlist
		-send bookmarks to other playlists
------------------------------------------------------------------
fixes:
	playlist:
		controller:
			[ ]create/update: mass assign problem
			(FIX? Don't try and create bookmark_urls through the user_bookmarks)
			(neverind =())
		view:
			edit:
				[x]change edit link to have link to 'edit' in user_bookmarks
	user:
		model/controller
			[x]user has two kinds of playlists, a default playlist and regular actual playlists
	user_bookmark:
		[ ]local variables?
		[x]controller:
			[x]make a 'destroy' method
			[x]make an 'edit/update' method
		view:
			[x]make an 'edit' view
------------------------------------------------------------------
Do now:
	[x]update user_bookmarks 
		[x]change controller
		[x]edit button: prevent default, send to html
		[x]discard changes button
			[x]render bookmark
			[x]submit button
		[x]return js reply
			[x]hidden_id's and where the divs go
			[x]replace node
			[x]set event listeners
		[x]remote submit
		[x]delete 
			[x]controller
			[x]partial
	[x]default playlist
		[x]model
		[x]controller
		[x]view
	[x]user bookmarks
		[x]change new/edit to show which playlist
	[x]moving items between playlists
		[x]controller (in playlists controller? shouldn't be that hard)
		[x]routing
		[x]ajax method to playlist controller
	[x]redirect create bookmark to user when it's for default playlist
	[x]drag and drop
		--controller--
		[x]make controller
		[x]create bookmark_url action (redirect_to new? or edit? user_bookmark)
		[x]make sure that the user_bookmark create/update can handle this properly
		--view--
		[x]under playlist, create a large div
			[x]form, hidden element, listeners
	------------------		
	[ ]handle bookmarklets
		[x]submit
		[ ]jquery check bookmarklet link, change second clause
			[ ]add namespace to added jquery 	http://stackoverflow.com/questions/5978515/how-do-i-use-two-different-versions-of-jquery-side-by-side
		[x]prevent redirect
		[ ]notification
		[ ]cross site xhr
	[ ]test moving items between playlists
	[ ]https
	[ ]back-and-authenticate
	[ ]disable multiple ajax submits
	[ ]thumbnails
	[ ]notification (use noty?)
		[ ]ajax errors
		[ ]html errors
		[ ]warnings before submitting invalid data
	[ ]better edit-view mode switch and better delete link placement
	[ ]worries about ajax on invalid stuff
		[ ]disable multiple submits
		[ ]get rid of ajax playlist deletion
		[ ]when data is dirty (from another tab or something), require refresh
	[ ]embed players

	9:58
	10:34
------------------------------------------------------------------
potential changes:
	bookmark urls model
		indexing
		adding a counter
		storing when different URLs go to the same page
------------------------------------------------------------------
I don't know what this means for it:
	user_bookmarks are not destroyed when they're removed from bookmark_urls

------------------------------------------------------------------

connections to allow:

multiple-degree connections

users following users:

users following playlists

bookmarks showing who has  playlists and users

